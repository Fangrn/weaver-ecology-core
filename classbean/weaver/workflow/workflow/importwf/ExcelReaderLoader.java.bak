package weaver.workflow.workflow.importwf;

import java.io.File;
import java.lang.reflect.Method;

import javax.servlet.http.HttpServletRequest;

import weaver.general.BaseBean;
import weaver.general.GCONST;

public class ExcelReaderLoader extends BaseBean{
	private static ExcelReaderLoader loader = null;
	private Method readerMethod = null;
	private Object readerInstance = null;
	
	public static synchronized ExcelReaderLoader getInstance(String filepath,String wfid,HttpServletRequest request,String readerClass){
		loader = new ExcelReaderLoader();
		loader.init(filepath,wfid,request,readerClass);
		return loader;
	}
	
	private void init(String filepath,String wfid,HttpServletRequest request,String readerClass){
		try {
			if("".equals(readerClass) || readerClass == null){
				readerClass = "weaver.workflow.workflow.importwf.ExcelReader";//默认读取excel的类
			}
			String libpath = GCONST.getRootPath() +  File.separator + "lib_wfimport" + File.separator;
			System.out.println(libpath);
			File file = new File(libpath);
			File[] files = file.listFiles();
			String [] jars = new String[files.length];
			for(int i = 0;i<files.length;i++){
				jars[i] = files[i].getAbsolutePath();
			}
			ClassLoader classLoader = new ParentLastClassLoader(Thread.currentThread().getContextClassLoader(), jars);
			Class<?> wfreader = classLoader.loadClass(readerClass);
			
			Class<?>[] paramTypes = new Class[] {String.class,String.class,HttpServletRequest.class};  
			Object[] params = new Object[] {filepath,wfid,request};  
			readerInstance = wfreader.getConstructor(paramTypes).newInstance(params);
			    
			this.readerMethod = wfreader.getMethod("readExcel", new Class[]{});
		} catch (Exception e) {
			writeLog("weaver.workflow.request.RequestXlsLoader 加载jar异常");
			e.printStackTrace();
		}
	}
	
	/**
	 * 导入流程
	 * @param wfid
	 * @return
	 */
	public WfAnalysis excelReader(){
		WfAnalysis result = null;
		try {
			result = (WfAnalysis)readerMethod.invoke(readerInstance, new Object[]{});
		} catch (Exception e) {
			writeLog("导入失败");
			e.printStackTrace();
		}
		
		return result;
	}
	
}
